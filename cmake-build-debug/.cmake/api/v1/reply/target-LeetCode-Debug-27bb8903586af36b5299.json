{
	"artifacts" : 
	[
		{
			"path" : "LeetCode.exe"
		},
		{
			"path" : "LeetCode.pdb"
		}
	],
	"backtrace" : 1,
	"backtraceGraph" : 
	{
		"commands" : 
		[
			"add_executable"
		],
		"files" : 
		[
			"CMakeLists.txt"
		],
		"nodes" : 
		[
			{
				"file" : 0
			},
			{
				"command" : 0,
				"file" : 0,
				"line" : 6,
				"parent" : 0
			}
		]
	},
	"compileGroups" : 
	[
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : "-g"
				},
				{
					"fragment" : "-std=gnu++23"
				}
			],
			"language" : "CXX",
			"languageStandard" : 
			{
				"backtraces" : 
				[
					1
				],
				"standard" : "23"
			},
			"sourceIndexes" : 
			[
				0,
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8,
				9,
				10,
				11,
				12,
				13,
				14,
				15,
				16,
				17,
				18,
				19,
				20,
				21,
				22,
				23,
				24,
				25,
				26,
				27,
				28,
				29,
				30,
				31,
				32,
				33,
				34,
				35,
				36,
				37,
				38,
				39,
				40,
				41,
				42,
				43,
				44,
				45,
				46,
				47,
				48,
				49,
				50,
				51,
				52,
				53,
				54,
				55,
				56,
				57,
				58,
				59,
				60,
				61,
				62,
				63,
				64,
				65,
				66,
				67,
				68,
				69,
				70
			]
		}
	],
	"id" : "LeetCode::@6890427a1f51a3e7e1df",
	"link" : 
	{
		"commandFragments" : 
		[
			{
				"fragment" : "-g",
				"role" : "flags"
			},
			{
				"fragment" : "",
				"role" : "flags"
			},
			{
				"fragment" : "-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32",
				"role" : "libraries"
			}
		],
		"language" : "CXX"
	},
	"name" : "LeetCode",
	"nameOnDisk" : "LeetCode.exe",
	"paths" : 
	{
		"build" : ".",
		"source" : "."
	},
	"sourceGroups" : 
	[
		{
			"name" : "Source Files",
			"sourceIndexes" : 
			[
				0,
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8,
				9,
				10,
				11,
				12,
				13,
				14,
				15,
				16,
				17,
				18,
				19,
				20,
				21,
				22,
				23,
				24,
				25,
				26,
				27,
				28,
				29,
				30,
				31,
				32,
				33,
				34,
				35,
				36,
				37,
				38,
				39,
				40,
				41,
				42,
				43,
				44,
				45,
				46,
				47,
				48,
				49,
				50,
				51,
				52,
				53,
				54,
				55,
				56,
				57,
				58,
				59,
				60,
				61,
				62,
				63,
				64,
				65,
				66,
				67,
				68,
				69,
				70
			]
		}
	],
	"sources" : 
	[
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0217-contains-duplicate.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0242-valid-anagram.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0001-two-sum.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0049-group-anagrams.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0347-top-k-frequent-elements.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0015-3sum.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0238-product-of-array-except-self.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0042-trapping-rain-water.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0036-valid-sudoku.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0128-longest-consecutive-sequence.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0020-valid-parentheses.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0155-min-stack.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0150-evaluate-reverse-polish-notation.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0022-generate-parentheses.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0739-daily-temperatures.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0853-car-fleet.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0084-largest-rectangle-in-histogram.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0125-valid-palindrome.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0167-two-sum-II-input-array-is-sorted.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0011-container-with-most-water.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0121-best-time-to-buy-and-sell-stock.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0003-longest-substring-without-repeating-characters.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0424-longest-repeating-character-replacement .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0567-permutation-in-string.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0076-minimum-window-substring.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0239-sliding-window-maximum.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0704-binary-search.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0074-search-a-2d-matrix.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0875-koko-eating-bananas.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0153-find-minimum-in-rotated-sorted-array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0033-search-in-rotated-array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0981-time-based-key-value-store.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0004-median-of-two-sorted-arrays.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0206-reverse-linked-list.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0021-merge-two-sorted-lists.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0143-reorder-list.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0019-remove-nth-node-from-end-of-list.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0138-copy-list-with-random-pointer.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0002-add-two-numbers.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0141-linked-list-cycle.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0287-find-the-duplicate-number.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0146-lru-cache.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0023-merge-k-sorted-lists.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0025-reverse-nodes-in-k-group.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0226-invert-binary-tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0104-maximum-depth-of-binary-tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0543-diameter-of-binary-tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0110-balanced-binary-tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0100-same-tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0572-subtree-of-another-tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0235-lowest-common-ancestor-of-a-binary-search-tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0102-binary-tree-level-order-traversal.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0199-binary-tree-right-side-view.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "1448-count-good-nodes-in-binary-tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0098-validate-binary-search-tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0230-kth-smallest-element-in-a-bst.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0124-binary-tree-maximum-path-sum.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0297-serialize-and-deserialize-binary-tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0208-implement-trie-(prefix-tree).cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0211-design-add-and-search-words-data-structure.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0212-word-search-II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0078-subsets.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0039-combination-sum.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0046-permutations.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0090-subsets-II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0040-combination-sum-II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0079-word-search.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0131-palindrome-partitioning.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0017-letter-combinations-of-a-phone-number.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "0051-n-queens.cpp",
			"sourceGroupIndex" : 0
		}
	],
	"type" : "EXECUTABLE"
}
